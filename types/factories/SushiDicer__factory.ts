/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SushiDicer } from "../SushiDicer";

export class SushiDicer__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SushiDicer> {
    return super.deploy(overrides || {}) as Promise<SushiDicer>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SushiDicer {
    return super.attach(address) as SushiDicer;
  }
  connect(signer: Signer): SushiDicer__factory {
    return super.connect(signer) as SushiDicer__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SushiDicer {
    return new Contract(address, _abi, signerOrProvider) as SushiDicer;
  }
}

const _abi = [
  {
    inputs: [],
    name: "masterChef",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sushiRouterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sushiWethSLP",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "swapFromEthAndStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wethAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600080546001600160a01b031990811673d9e1ce17f2641f24ae83637ab66a2cca9c378b9f1790915560018054821673c2edad668740f1aa35e4d8f227fb8e17dca888cd17905560028054821673795065dcc9f64b5614c407a6efdc400da6221fb01790556003805490911673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2179055600c60045534801561009957600080fd5b50610834806100a96000396000f3fe60806040526004361061004a5760003560e01c80634f0e0ef31461004f578063513ecde114610080578063575a86b21461009557806379bbce8f146100aa578063d17dfd41146100bf575b600080fd5b34801561005b57600080fd5b506100646100ed565b604080516001600160a01b039092168252519081900360200190f35b34801561008c57600080fd5b506100646100fc565b3480156100a157600080fd5b5061006461010b565b3480156100b657600080fd5b5061006461011a565b6100eb600480360360408110156100d557600080fd5b506001600160a01b038135169060200135610129565b005b6003546001600160a01b031681565b6002546001600160a01b031681565b6001546001600160a01b031681565b6000546001600160a01b031681565b600080546001600160a01b03169061014834600263ffffffff61061a16565b6040805160038082526080820190925291925060609190602082018380368337505060035482519293506001600160a01b03169183915060009061018857fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084816001815181106101b657fe5b6001600160a01b0392831660209182029290920101526060908416637ff36ab58484306101eb4261070863ffffffff61066516565b6040518563ffffffff1660e01b81526004018085815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b8381101561025e578181015183820152602001610246565b5050505090500195505050505050600060405180830381600087803b15801561028657600080fd5b505af115801561029a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156102c357600080fd5b81019080805160405193929190846401000000008211156102e357600080fd5b9083019060208201858111156102f857600080fd5b825186602082028301116401000000008211171561031557600080fd5b82525081516020918201928201910280838360005b8381101561034257818101518382015260200161032a565b505050509050016040525050509050856001600160a01b031663095ea7b36000809054906101000a90046001600160a01b03168360018151811061038257fe5b60200260200101516040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156103d957600080fd5b505af11580156103ed573d6000803e3d6000fd5b505050506040513d602081101561040357600080fd5b5050805160009061042a908390600190811061041b57fe5b602002602001015160636106bf565b90506000856001600160a01b031663f305d719868a8660018151811061044c57fe5b6020026020010151866104608b60636106bf565b306104734261070863ffffffff61066516565b6040518863ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001868152602001858152602001848152602001836001600160a01b03166001600160a01b0316815260200182815260200196505050505050506060604051808303818588803b1580156104ef57600080fd5b505af1158015610503573d6000803e3d6000fd5b50505050506040513d606081101561051a57600080fd5b50604090810151600254600154835163095ea7b360e01b81526001600160a01b039182166004820152602481018490529351929450169163095ea7b39160448083019260209291908290030181600087803b15801561057857600080fd5b505af115801561058c573d6000803e3d6000fd5b505050506040513d60208110156105a257600080fd5b505060015460408051631c57762b60e31b8152600481018a90526024810184905290516001600160a01b039092169163e2bbb1589160448082019260009290919082900301818387803b1580156105f857600080fd5b505af115801561060c573d6000803e3d6000fd5b505050505050505050505050565b600061065c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506106e2565b90505b92915050565b60008282018381101561065c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061065c60646106d6858563ffffffff61078416565b9063ffffffff61061a16565b6000818361076e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561073357818101518382015260200161071b565b50505050905090810190601f1680156107605780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161077a57fe5b0495945050505050565b6000826107935750600061065f565b828202828482816107a057fe5b041461065c5760405162461bcd60e51b81526004018080602001828103825260218152602001806107de6021913960400191505060405180910390fdfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220eca04a32bad81506a52fc0ed880b1ba810259456e03b510c7038ba1f99a4667664736f6c63430006080033";
