/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Protocol } from "../Protocol";

export class Protocol__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _optionRegistry: string,
    _liquidityPools: string,
    _priceFeed: string,
    overrides?: Overrides
  ): Promise<Protocol> {
    return super.deploy(
      _optionRegistry,
      _liquidityPools,
      _priceFeed,
      overrides || {}
    ) as Promise<Protocol>;
  }
  getDeployTransaction(
    _optionRegistry: string,
    _liquidityPools: string,
    _priceFeed: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _optionRegistry,
      _liquidityPools,
      _priceFeed,
      overrides || {}
    );
  }
  attach(address: string): Protocol {
    return super.attach(address) as Protocol;
  }
  connect(signer: Signer): Protocol__factory {
    return super.connect(signer) as Protocol__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Protocol {
    return new Contract(address, _abi, signerOrProvider) as Protocol;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_optionRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liquidityPools",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "liquidityPools",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optionRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101603803806101608339818101604052606081101561003357600080fd5b5080516020820151604090920151600080546001600160a01b039384166001600160a01b031991821617909155600180549484169482169490941790935560028054929091169190921617905560d28061008e6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80633b4567b0146041578063741bef1a146063578063d6efd7c3146069575b600080fd5b6047606f565b604080516001600160a01b039092168252519081900360200190f35b6047607e565b6047608d565b6000546001600160a01b031681565b6002546001600160a01b031681565b6001546001600160a01b03168156fea26469706673582212208c0ff4360c91408aaeeacb0ec806be078195c11e0de1da727ddf8e14e97bfd8364736f6c63430006080033";
