/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface LiquidityPoolsInterface extends ethers.utils.Interface {
  functions: {
    "createLiquidityPool(address,address,uint256,uint256,string,string)": FunctionFragment;
    "protocol()": FunctionFragment;
    "setup(address)": FunctionFragment;
    "strikeAssets(address)": FunctionFragment;
    "supplyLiquidity(address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "createLiquidityPool",
    values: [string, string, BigNumberish, BigNumberish, string, string]
  ): string;
  encodeFunctionData(functionFragment: "protocol", values?: undefined): string;
  encodeFunctionData(functionFragment: "setup", values: [string]): string;
  encodeFunctionData(
    functionFragment: "strikeAssets",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "supplyLiquidity",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "createLiquidityPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "protocol", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setup", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "strikeAssets",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supplyLiquidity",
    data: BytesLike
  ): Result;

  events: {
    "LiquidityPoolCreated(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "LiquidityPoolCreated"): EventFragment;
}

export class LiquidityPools extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: LiquidityPoolsInterface;

  functions: {
    createLiquidityPool(
      _strikeAsset: string,
      underlying: string,
      rfr: BigNumberish,
      iv: BigNumberish,
      name: string,
      symbol: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createLiquidityPool(address,address,uint256,uint256,string,string)"(
      _strikeAsset: string,
      underlying: string,
      rfr: BigNumberish,
      iv: BigNumberish,
      name: string,
      symbol: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    protocol(overrides?: CallOverrides): Promise<[string]>;

    "protocol()"(overrides?: CallOverrides): Promise<[string]>;

    setup(
      _protocol: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setup(address)"(
      _protocol: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    strikeAssets(arg0: string, overrides?: CallOverrides): Promise<[string]>;

    "strikeAssets(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    supplyLiquidity(
      _strikeAsset: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "supplyLiquidity(address,uint256)"(
      _strikeAsset: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  createLiquidityPool(
    _strikeAsset: string,
    underlying: string,
    rfr: BigNumberish,
    iv: BigNumberish,
    name: string,
    symbol: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createLiquidityPool(address,address,uint256,uint256,string,string)"(
    _strikeAsset: string,
    underlying: string,
    rfr: BigNumberish,
    iv: BigNumberish,
    name: string,
    symbol: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  protocol(overrides?: CallOverrides): Promise<string>;

  "protocol()"(overrides?: CallOverrides): Promise<string>;

  setup(_protocol: string, overrides?: Overrides): Promise<ContractTransaction>;

  "setup(address)"(
    _protocol: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  strikeAssets(arg0: string, overrides?: CallOverrides): Promise<string>;

  "strikeAssets(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<string>;

  supplyLiquidity(
    _strikeAsset: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "supplyLiquidity(address,uint256)"(
    _strikeAsset: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    createLiquidityPool(
      _strikeAsset: string,
      underlying: string,
      rfr: BigNumberish,
      iv: BigNumberish,
      name: string,
      symbol: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "createLiquidityPool(address,address,uint256,uint256,string,string)"(
      _strikeAsset: string,
      underlying: string,
      rfr: BigNumberish,
      iv: BigNumberish,
      name: string,
      symbol: string,
      overrides?: CallOverrides
    ): Promise<void>;

    protocol(overrides?: CallOverrides): Promise<string>;

    "protocol()"(overrides?: CallOverrides): Promise<string>;

    setup(_protocol: string, overrides?: CallOverrides): Promise<void>;

    "setup(address)"(
      _protocol: string,
      overrides?: CallOverrides
    ): Promise<void>;

    strikeAssets(arg0: string, overrides?: CallOverrides): Promise<string>;

    "strikeAssets(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<string>;

    supplyLiquidity(
      _strikeAsset: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "supplyLiquidity(address,uint256)"(
      _strikeAsset: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    LiquidityPoolCreated(lp: null, strikeAsset: null): EventFilter;
  };

  estimateGas: {
    createLiquidityPool(
      _strikeAsset: string,
      underlying: string,
      rfr: BigNumberish,
      iv: BigNumberish,
      name: string,
      symbol: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createLiquidityPool(address,address,uint256,uint256,string,string)"(
      _strikeAsset: string,
      underlying: string,
      rfr: BigNumberish,
      iv: BigNumberish,
      name: string,
      symbol: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    protocol(overrides?: CallOverrides): Promise<BigNumber>;

    "protocol()"(overrides?: CallOverrides): Promise<BigNumber>;

    setup(_protocol: string, overrides?: Overrides): Promise<BigNumber>;

    "setup(address)"(
      _protocol: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    strikeAssets(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "strikeAssets(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    supplyLiquidity(
      _strikeAsset: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "supplyLiquidity(address,uint256)"(
      _strikeAsset: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    createLiquidityPool(
      _strikeAsset: string,
      underlying: string,
      rfr: BigNumberish,
      iv: BigNumberish,
      name: string,
      symbol: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createLiquidityPool(address,address,uint256,uint256,string,string)"(
      _strikeAsset: string,
      underlying: string,
      rfr: BigNumberish,
      iv: BigNumberish,
      name: string,
      symbol: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    protocol(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "protocol()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setup(
      _protocol: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setup(address)"(
      _protocol: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    strikeAssets(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "strikeAssets(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    supplyLiquidity(
      _strikeAsset: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "supplyLiquidity(address,uint256)"(
      _strikeAsset: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
